version: '3.8'

services:
  pgvector:
    image: pgvector/pgvector:pg17
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - "pgvector_data:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "org.springframework.boot.service-connection=postgres"

#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    image: spring-boot-app
#    ports:
#      - "8080:8080"
#    depends_on:
#      pgvector:
#        condition: service_healthy
#    environment:
#      - DB_URL=${DB_URL}
#      - DB_USER=${DB_USER}
#      - DB_PASSWORD=${DB_PASSWORD}
#
#      - JWT=${JWT}
#      - SENDER_EMAIL=${SENDER_EMAIL}
#
#      - MAIL_HOST=${MAIL_HOST}
#      - MAIL_PORT=${MAIL_PORT}
#      - MAIL_USERNAME=${MAIL_USERNAME}
#      - MAIL_PASSWORD=${MAIL_PASSWORD}
#      - MAIL_AUTH_CODE_EXPIRATION_MILLIS=${MAIL_AUTH_CODE_EXPIRATION_MILLIS}
#
#      - REDIS_HOST=${REDIS_HOST}
#      - REDIS_PORT=${REDIS_PORT}
#      - REDIS_PASSWORD=${REDIS_PASSWORD}
#
#      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
#      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
#      - AWS_REGION=${AWS_REGION}
#      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
#
#      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
#      - GOOGLE_SECRET_KEY=${GOOGLE_SECRET_KEY}
#      - GOOGLE_REDIRECT_URL=${GOOGLE_REDIRECT_URL}
#
#      - OPEN_AI_KEY=${OPEN_AI_KEY}

volumes:
  pgvector_data:
